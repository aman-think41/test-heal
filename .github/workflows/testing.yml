name: Selenium CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        node-version: [18]
      
    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
        options: >-
          --shm-size=2g

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        cache-dependency-path: client/package-lock.json
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Node Dependencies
      run: |
        cd ./client
        npm ci

    - name: Build the Project
      run: |
        cd ./client
        npm run build

    - name: Start Application Server
      run: |
        cd ./client
        nohup npm run preview &  # Start Vite preview server in the background
      env:
        HOST: "0.0.0.0"  # Make the server accessible from all interfaces (needed for GitHub runner)
        PORT: 4173       # Define the port to be used for preview mode

    - name: Wait for the Server to be Ready
      run: |
        # Wait until the server responds on port 4173
        timeout 30s bash -c 'until echo > /dev/tcp/localhost/4173; do sleep 1; done'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium

    - name: Run Selenium Tests
      env:
        DISPLAY: :99  # Required for headless testing
      run: |
        cd ./client/tests
        python dir.py
        python run_testing_pipeline.py
        # python run_testing_pipeline.py > ./test-results/main_test.log 2>&1

    - name: Archive Selenium Test Results
      if: always()  # Always upload artifacts even if the test fails
      uses: actions/upload-artifact@v3
      with:
        name: selenium-test-results
        path: ./client/tests/test-results/  # Upload the `test-results` directory as an artifact
